version: "3.8"

services:
  sentry-redis:
    image: redis:latest
    container_name: sentry-redis
    hostname: sentry-redis
    restart: always
    networks:
      - sentry-network
    volumes:
      - sentry-redis-data:/data
  
  sentry-postgres:
    image: postgres:latest
    container_name: sentry-postgres
    hostname: sentry-postgres
    restart: always
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: 89PsZXyRStOT2
      POSTGRES_DB: sentry
    networks:
      - sentry-network
    volumes:
      - sentry-postgres-data:/var/lib/postgresql/data

  sentry-server:
    image: sentry:latest
    container_name: sentry-server
    hostname: sentry-server
    restart: always
    ports:
      - '9000:9000'
    env_file:
      - .env
    depends_on:
      - sentry-redis
      - sentry-postgres
    networks:
      - sentry-network
    volumes:
      - sentry-server-data:/var/lib/sentry/files

  sentry-cron:
    image: sentry:latest
    container_name: sentry-cron
    hostname: sentry-cron
    restart: always
    env_file:
      - .env
    depends_on:
      - sentry-redis
      - sentry-postgres
    command: "sentry run cron"
    networks:
      - sentry-network
    volumes:
      - sentry-cron-data:/var/lib/sentry/files

  sentry-worker:
    image: sentry:latest
    container_name: sentry-worker
    hostname: sentry-worker
    restart: always
    env_file:
      - .env
    depends_on:
      - sentry-redis
      - sentry-postgres
    command: "sentry run worker"
    networks:
      - sentry-network
    volumes:
      - sentry-worker-data:/var/lib/sentry/files

volumes:
  sentry-worker-data:
    name: sentry-worker-data
  sentry-cron-data:
    name: sentry-cron-data
  sentry-server-data:
    name: sentry-server-data
  sentry-postgres-data:
    name: sentry-postgres-data
  sentry-redis-data:
    name: sentry-redis-data

networks:
  sentry-network:
    name: sentry-network
    driver: bridge